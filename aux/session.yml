name: simulation
root: ./
startup_window: status
pre_window: 'export UAV_NAME=uav1; export WORLD_FILE=./world.yaml; export RUN_TYPE=simulation; export UAV_TYPE=f450; export WORLD_NAME=simulation; export SENSORS="garmin_down"; 
             export CAMERA=enable-realsense-down'
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch sarc_environment sarc_mrs.launch
  - status:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-ground-truth --$CAMERA --pos_file `pwd`/pos/posTest.yaml"
        # uav 1
        #- waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-ground-truth --$CAMERA --pos_file `pwd`/pos/pos1.yaml"
        # uav 2
        #- waitForSimulation; rosservice call /mrs_drone_spawner/spawn "2 $UAV_TYPE --enable-rangefinder --enable-ground-truth --$CAMERA --pos_file `pwd`/pos/pos2.yaml"
        # uav 3
        #- waitForSimulation; rosservice call /mrs_drone_spawner/spawn "3 $UAV_TYPE --enable-rangefinder --enable-ground-truth --$CAMERA --pos_file `pwd`/pos/pos3.yaml"
        # uav 4
        #- waitForSimulation; rosservice call /mrs_drone_spawner/spawn "4 $UAV_TYPE --enable-rangefinder --enable-ground-truth --$CAMERA --pos_file `pwd`/pos/pos4.yaml"
        # uav 5
        #- waitForSimulation; rosservice call /mrs_drone_spawner/spawn "5 $UAV_TYPE --enable-rangefinder --enable-ground-truth --$CAMERA --pos_file `pwd`/pos/pos5.yaml"

        ### BACKUP ###

        # uav 1
        # - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-ground-truth --pos_file `pwd`/pos/pos1.yaml"
        # uav 2
        # - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "2 $UAV_TYPE --enable-rangefinder --enable-ground-truth --pos_file `pwd`/pos/pos2.yaml"
        # uav 3
        # - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "3 $UAV_TYPE --enable-rangefinder --enable-ground-truth --pos_file `pwd`/pos/pos3.yaml"
        # uav 4
        # - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "4 $UAV_TYPE --enable-rangefinder --enable-ground-truth --pos_file `pwd`/pos/pos4.yaml"
        # uav 5
        # - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "5 $UAV_TYPE --enable-rangefinder --enable-ground-truth --pos_file `pwd`/pos/pos5.yaml"
  - control:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_uav_general core.launch #config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_uav_general core.launch #config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_NAME=uav3; waitForOdometry; roslaunch mrs_uav_general core.launch #config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_NAME=uav4; waitForOdometry; roslaunch mrs_uav_general core.launch #config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_NAME=uav5; waitForOdometry; roslaunch mrs_uav_general core.launch #config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
  - takeoff:
      layout: tiled
      panes:
      # uav 1
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - 'export UAV_NAME=uav1; waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
      # uav 2
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - 'export UAV_NAME=uav2; waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
      # uav 3
        - export UAV_NAME=uav3; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - 'export UAV_NAME=uav3; waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
      # uav 4
        - export UAV_NAME=uav4; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - 'export UAV_NAME=uav4; waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
      # uav 5
        - export UAV_NAME=uav5; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - 'export UAV_NAME=uav5; waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
  - cameras:
      layout: tiled
      panes:
        - waitForOdometry; #rosrun image_view image_view image:=/uav5/$CAMERA_TOPIC
  - commands:
      layout: tiled
      panes:
        - echo "rosservice call /uav1/control_manager/goto "
        - cd ..; cd ..; cd ..; cd ..; waitForControl; cd Programação/SARC2022/python/aux/get_img_ros/; python3 applyColorDetection_uav1.py
        - waitForControl; rostopic echo /uav1/odometry/odom_main
        - clear

    